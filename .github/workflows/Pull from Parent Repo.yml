name: Update from Upstream
on:
  workflow_dispatch:
  schedule:
    - cron: 0 2 * * 1
jobs:
  update:
    name: Pull down commits from a parent repo
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with: 
        fetch-depth: 0
    - name: Check and merge from upstream
      run: |
        tree -alqQC --dirsfirst ./
        echo 1
        # Configure Git to use your repo (important!)
      
        git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
      
        git config --global user.email "${{ secrets.EMAIL }}"
      
        git config --global user.name "upstreamPuller"
      
        echo 2      
        # Fetch changes from your fork's master branch (not upstream yet)
      
        git fetch origin master
      
      
        # Add the upstream remote if it doesn't exist
      
        git remote add upstream https://github.com/glfw/glfw.git
      
         # Or, if it exists, fetch from it
        git fetch upstream
      
        echo 3
      
        # Check mergeability for show
        git merge --no-commit upstream/master 2>&1
        # and recording the output for in a moment
        merge_result=$(git merge --no-commit upstream/master 2>&1) # Use upstream/master
      
      
        echo 4$merge_result4
        if [[ ! "$merge_result" =~ "Automatic merge failed" && ! "$merge_result" =~ "CONFLICT" ]]; then

          echo 5
          echo "No conflicts detected. Merging upstream master..."
          git merge upstream/master || { echo "Error: Merge failed."; exit 1; }
          git commit -m "Merged upstream master" || { echo "Error: Commit failed."; exit 1; }
          git push origin master || { echo "Error: Push failed."; exit 1; } # Push to your repo
      
          echo "Performing action for no conflicts..."
          # Example: Run tests (replace with your desired command)
          # I would potentially build and release here, but thats hard.
          
        else
          echo 7
          echo "Conflicts detected during merge with upstream master."
          echo "$merge_result" # Print the merge result (including conflicts)
          echo "Performing action for conflicts..."
          # I would potentially email the owner or something here
          # Create a pull request (more complex, requires GitHub API)
          # ...
      
          
        fi
